<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.leo.mqtt.dao.MqttUserMapper" >
  <resultMap id="BaseResultMap" type="com.leo.mqtt.model.MqttUser" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="is_superuser" property="isSuperuser" jdbcType="BIT" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="clear_password" property="clearPassword" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, salt, is_superuser, created, clear_password
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from mqtt_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from mqtt_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.leo.mqtt.model.MqttUser" >
    insert into mqtt_user (id, username, password, 
      salt, is_superuser, created, 
      clear_password)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salt,jdbcType=VARCHAR}, #{isSuperuser,jdbcType=BIT}, #{created,jdbcType=TIMESTAMP}, 
      #{clearPassword,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.leo.mqtt.model.MqttUser" >
    insert into mqtt_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salt != null" >
        salt,
      </if>
      <if test="isSuperuser != null" >
        is_superuser,
      </if>
      <if test="created != null" >
        created,
      </if>
      <if test="clearPassword != null" >
        clear_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="isSuperuser != null" >
        #{isSuperuser,jdbcType=BIT},
      </if>
      <if test="created != null" >
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="clearPassword != null" >
        #{clearPassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.leo.mqtt.model.MqttUser" >
    update mqtt_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="isSuperuser != null" >
        is_superuser = #{isSuperuser,jdbcType=BIT},
      </if>
      <if test="created != null" >
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="clearPassword != null" >
        clear_password = #{clearPassword,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.leo.mqtt.model.MqttUser" >
    update mqtt_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      is_superuser = #{isSuperuser,jdbcType=BIT},
      created = #{created,jdbcType=TIMESTAMP},
      clear_password = #{clearPassword,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 通过用户名查询连接用户信息 -->
  <select id="selectByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mqtt_user
    WHERE username =
    #{username,jdbcType=VARCHAR}
  </select>

  <!-- 通过用户名和密码查询用户信息;mqtt-http鉴权 -->
  <select id="selectByUserNameAndPassword" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mqtt_user
    WHERE 1=1
    <if test="username != null">
      AND username = #{username,jdbcType=VARCHAR}
    </if>
    <if test="password != null">
      AND password = #{password, jdbcType=VARCHAR}
    </if>
  </select>
</mapper>